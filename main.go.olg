package main

import (
	"log"
	"os"
	"os/signal"
	"syscall"
	"time"
)

func main1() {
	// 시그널 채널을 생성하여 인터럽트 및 종료 시그널을 수신합니다.
	sigChan := make(chan os.Signal, 1)
	signal.Notify(sigChan, os.Interrupt, syscall.SIGTERM)

	// 데몬 루프 시작
	go func() {
		for {
			select {
			case <-sigChan: // 시그널 수신 시 종료
				log.Println("Received termination signal. Exiting...")
				os.Exit(0)
			default:
				// 1초마다 로그를 출력합니다.
				log.Println("Daemon is running...")
				time.Sleep(time.Second)
			}
		}
	}()

	// 프로그램을 실행하고 백그라운드에서 계속 실행됩니다.
	log.Println("Daemon started. Press Ctrl+C to exit.")
	// 무한 루프를 피하기 위해 무언가를 실행하도록 유지합니다.
	select {}
}
